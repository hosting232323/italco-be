stages:
  - test

image: python:3.11

services:
  - name: postgres:15
    alias: postgres
  - name: selenium/standalone-chromium:latest
    alias: selenium

variables:
  POSTGRES_DB: mydb
  POSTGRES_USER: myuser
  POSTGRES_PASSWORD: mypassword
  DATABASE_URL: postgresql://${POSTGRES_USER}:${POSTGRES_PASSWORD}@postgres:5432/${POSTGRES_DB}

before_script:
  - apt-get update && apt-get install -y python3 python3-pip git postgresql-client npm
  - pip install --upgrade pip
  - pip install -r requirements.txt
  - export DATABASE_URL=$DATABASE_URL

  - git clone https://$CI_FE_USERNAME:$CI_FE_TOKEN@gitlab.com/generic-lab/italco/italco-fe.git frontend
  - cd frontend
  - npm install
  - export VITE_HOSTNAME=http://127.0.0.1:8080/
  - npm run build || exit 1
  - npm run serve &
  - cd ..

  - git clone -b pipeline https://$CI_GENERIC_TEST_USERNAME:$CI_GENERIC_TEST_TOKEN@gitlab.com/generic-lab/generics/generic-test.git generic-test
  - cd generic-test
  - pip install -r ./requirements.txt
  - cd ..

backend_test:
  stage: test
  script:
    - until pg_isready -h postgres -U $POSTGRES_USER; do echo "Waiting for postgres..."; sleep 2; done
    - alembic upgrade heads
    - python -m src &
    - until curl -s http://127.0.0.1:8080; do echo "Waiting for backend..."; sleep 2; done

    - export FRONTEND_IP=$(hostname -I | tr ' ' '\n' | grep -m1 '^[0-9]\+\.[0-9]\+\.[0-9]\+\.[0-9]\+$')
    - export VITE_HOSTNAME_ITALCO_FE=http://$FRONTEND_IP:3000/
    - echo "Frontend URL $VITE_HOSTNAME_ITALCO_FE"
    - curl $VITE_HOSTNAME_ITALCO_FE

    - cd generic-test
    - pytest -s ./tests/italco/test_login.py
