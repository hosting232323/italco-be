stages:
  - test

image: python:3.11  # <--- container base con Python

services:
  - name: postgres:15
    alias: postgres

variables:
  POSTGRES_DB: mydb
  POSTGRES_USER: myuser
  POSTGRES_PASSWORD: mypassword
  DATABASE_URL: postgres://${POSTGRES_USER}:${POSTGRES_PASSWORD}@postgres:5432/${POSTGRES_DB}
  # Se usi pytest o simili, disattiva lâ€™output bufferizzato
  PYTHONUNBUFFERED: 1

before_script:
  - apt-get update && apt-get install -y postgresql-client
  - pip install --upgrade pip
  - pip install -r requirements.txt
  - export DATABASE_URL=$DATABASE_URL

backend_test:
  stage: test
  script:
    # Attendi che Postgres sia pronto
    - until pg_isready -h postgres -U $POSTGRES_USER; do echo "Waiting for postgres..."; sleep 2; done
    # Esegui le migrazioni
    - alembic upgrade heads
    # Avvia il backend in background
    - python -m src &
    # Attendi che il backend sia avviato (meglio con un healthcheck, qui usiamo sleep)
    - sleep 5
    # Test con curl sulla rotta di base (cambia porta se serve)
    - curl -v http://localhost:8000/
