stages:
  - prepare
  - test

prepare-backend:
  stage: prepare
  image: python:3.11
  script:
    - pip install -r requirements.txt
  artifacts:
    paths:
      - requirements.txt   # o .venv se usi virtualenv
    expire_in: 1h

prepare-frontend:
  stage: prepare
  image: node:20
  script:
    - git clone https://$CI_FE_USERNAME:$CI_FE_TOKEN@gitlab.com/generic-lab/italco/italco-fe.git frontend
    - cd frontend
    - npm install
    - npm run build
  artifacts:
    paths:
      - frontend/dist/
    expire_in: 1h

prepare-tests:
  stage: prepare
  image: python:3.11
  script:
    - git clone -b italco-test https://$CI_GENERIC_TEST_USERNAME:$CI_GENERIC_TEST_TOKEN@gitlab.com/generic-lab/generics/generic-test.git generic-test
    - cd generic-test
    - pip install -r requirements.txt
  artifacts:
    paths:
      - generic-test/
    expire_in: 1h

selenium-tests:
  stage: test
  image: python:3.11
  services:
    - name: selenium/standalone-chrome:latest
      alias: selenium
  dependencies:
    - prepare-backend
    - prepare-frontend
    - prepare-tests
  before_script:
    - pip install -r requirements.txt   # reinstalla BE deps dal requirements.txt artifact
    - cd frontend
    - npm install -g serve
    - cd ..
  script:
    # Avvia backend
    - export DATABASE_URL=postgresql://neondb_owner:xxx@ep-icy-sky-af3pjvf1.c-2.us-west-2.aws.neon.tech/neondb
    - export DECODE_JWT_TOKEN='blablabla'
    - python -m src &
    - until curl -s http://127.0.0.1:8080 > /dev/null; do echo "⏳ Aspetto BE..."; sleep 2; done

    # Avvia FE statico dalla dist
    - npx serve -s frontend/dist -l 3000 &
    - until curl -s http://127.0.0.1:3000 > /dev/null; do echo "⏳ Aspetto FE..."; sleep 2; done

    # Esegui i test
    - cd generic-test
    - export VITE_HOSTNAME_ITALCO_FE=http://127.0.0.1:3000
    - pytest -s ./tests/italco/test_login.py

  only:
    - branches
