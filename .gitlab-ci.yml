stages:
  - build_frontend
  - test

image: docker:24.0.5
services:
  - docker:dind

variables:
  POSTGRES_DB: mydb
  POSTGRES_USER: myuser
  POSTGRES_PASSWORD: mypassword
  DATABASE_URL: postgresql://${POSTGRES_USER}:${POSTGRES_PASSWORD}@postgres:5432/${POSTGRES_DB}
  VITE_HOSTNAME_ITALCO_FE: http://frontend:3000/
  DOCKER_DRIVER: overlay2
  FRONTEND_IMAGE: registry.gitlab.com/generic-lab/italco/ialco-fe/italco-fe:ci

build_frontend_image:
  stage: build_frontend
  image: node:20
  script:
    - docker login -u $CI_REGISTRY_USER -p $CI_REGISTRY_PASSWORD $CI_REGISTRY
    - docker build -f frontend/Dockerfile.ci -t $FRONTEND_IMAGE frontend/
    - docker push $FRONTEND_IMAGE
  rules:
    - if: '$CI_COMMIT_BRANCH'

backend_test:
  stage: test
  image: python:3.11
  services:
    - name: postgres:15
      alias: postgres
    - name: selenium/standalone-chromium:latest
      alias: selenium
    - name: $FRONTEND_IMAGE
      alias: frontend
  before_script:
  - curl http://frontend:3000/

  - apt-get update && apt-get install -y python3 python3-pip git postgresql-client npm
  - pip install --upgrade pip
  - pip install -r requirements.txt
  - export DATABASE_URL=$DATABASE_URL

  - git clone -b pipeline https://$CI_GENERIC_TEST_USERNAME:$CI_GENERIC_TEST_TOKEN@gitlab.com/generic-lab/generics/generic-test.git generic-test
  - cd generic-test
  - pip install -r ./requirements.txt
  - cd ..
  script:
    - until pg_isready -h postgres -U $POSTGRES_USER; do echo "Waiting for postgres..."; sleep 2; done
    - alembic upgrade heads
    - python -m src &
    - until curl -s http://127.0.0.1:8080; do echo "Waiting for backend..."; sleep 2; done
    - cd generic-test
    - pytest -s ./tests/italco/test_login.py
