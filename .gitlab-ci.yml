stages:
  - prepare
  - test

image: hosting23232323/python-node:3.11
variables:
  POSTGRES_DB: mydb
  POSTGRES_USER: myuser
  POSTGRES_PASSWORD: mypassword
  DATABASE_URL: postgresql://${POSTGRES_USER}:${POSTGRES_PASSWORD}@postgres:5432/${POSTGRES_DB}
  DECODE_JWT_TOKEN: token
  GITLAB_PIPELINE: 'true'

be_dependencies:
  stage: prepare
  script:
    - python -m venv venv
    - source venv/bin/activate
    - pip install -r requirements.txt
    - git clone https://$CI_GENERIC_TEST_USERNAME:$CI_GENERIC_TEST_TOKEN@gitlab.com/generic-lab/generics/generic-test.git
    - cd generic-test
    - pip install -r ./requirements.txt
  artifacts:
    paths:
      - generic-test
      - venv
    expire_in: 1h
  tags:
    - linux

test_end_to_end:
  stage: test
  needs:
    - job: be_dependencies
      artifacts: true
  services:
    - name: registry.gitlab.com/generic-lab/italco/italco-fe:latest
      alias: italco-fe
      auth:
        username: "$CI_FE_USERNAME"
        password: "$CI_FE_TOKEN"
    - name: postgres:15
      alias: postgres
    - name: selenium/standalone-chromium:latest
      alias: selenium
  script:
    - source venv/bin/activate
    - alembic upgrade heads
    - python -m src &

    - echo "Aspetto che il frontend sia disponibile..."
    - until curl -s http://italco-fe:3000 > /dev/null; do sleep 2; done
    - echo "âœ… Frontend pronto"

    - cd generic-test
    - pytest -s ./tests/italco/test_login.py
  artifacts:
    when: always
    paths:
      - generic-test/screenshots/
    expire_in: 1 week
  tags:
    - linux

lint_backend:
  stage: test
  script:
    - pip install ruff
    - ruff check ./src --exit-non-zero-on-fix
    - ruff format ./src --exit-non-zero-on-fix
  tags:
    - linux
