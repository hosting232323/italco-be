stages:
  - test

image: python:3.11

services:
  - name: postgres:15
    alias: postgres
  - name: selenium/standalone-chromium:latest
    alias: selenium
  - name: node:20
    alias: frontend

variables:
  POSTGRES_DB: mydb
  POSTGRES_USER: myuser
  POSTGRES_PASSWORD: mypassword
  DATABASE_URL: postgresql://${POSTGRES_USER}:${POSTGRES_PASSWORD}@postgres:5432/${POSTGRES_DB}
  VITE_HOSTNAME_ITALCO_FE: http://frontend:3000/

before_script:
  - apt-get update && apt-get install -y python3 python3-pip git postgresql-client npm
  - pip install --upgrade pip
  - pip install -r requirements.txt
  - export DATABASE_URL=$DATABASE_URL

  - git clone -b pipeline https://$CI_GENERIC_TEST_USERNAME:$CI_GENERIC_TEST_TOKEN@gitlab.com/generic-lab/generics/generic-test.git generic-test
  - cd generic-test
  - pip install -r ./requirements.txt
  - cd ..

backend_test:
  stage: test
  script:
    - docker exec frontend bash -c "cd /app && npm install && npm run build && npm run serve -- --host 0.0.0.0 --port 3000" || true

    - until pg_isready -h postgres -U $POSTGRES_USER; do echo "Waiting for postgres..."; sleep 2; done
    - alembic upgrade heads
    - python -m src &
    - until curl -s http://127.0.0.1:8080; do echo "Waiting for backend..."; sleep 2; done

    - curl http://frontend:3000/
    - cd generic-test
    - pytest -s ./tests/italco/test_login.py
